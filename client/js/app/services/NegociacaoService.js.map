{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","_obterNegociacoesDaSemana","_obterNegociacoesDaSemanaAnterior","_obterNegociacoesDaSemanaRetrasada","then","negociacoes","reduce","finalArray","currentArray","concat","catch","console","log","err","Error","get","map","Date","objeto","data","quantidade","valor","negociacao","getConnection","connection","dao","adicionar","apagarTodos","listarTodos","listaAtual","_obterNegociacoes","filter","some","isEquals","neg","forEach"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n  constructor() {\r\n    this._http = new HttpService();\r\n  }\r\n\r\n  _obterNegociacoes() {\r\n    return Promise.all([\r\n      this._obterNegociacoesDaSemana(), \r\n      this._obterNegociacoesDaSemanaAnterior(),\r\n      this._obterNegociacoesDaSemanaRetrasada()\r\n    ])\r\n    .then(negociacoes => \r\n      negociacoes.reduce((finalArray, currentArray) => finalArray.concat(currentArray), [])\r\n    )\r\n    .catch(err => {\r\n      console.log(err);\r\n      throw new Error(err);\r\n    });\r\n  }\r\n\r\n  _obterNegociacoesDaSemana() {\r\n    return this._http\r\n      .get('negociacoes/semana')\r\n      .then(negociacoes => \r\n        negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n      )\r\n      .catch(err => {\r\n        console.log(err);\r\n        throw new Error('Não foi possível obter as negociações da semana.');\r\n      });    \r\n  }\r\n\r\n  _obterNegociacoesDaSemanaAnterior() {\r\n    return this._http\r\n      .get('negociacoes/anterior')\r\n      .then(negociacoes => \r\n        negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n      )\r\n      .catch(err => {\r\n        console.log(err);\r\n        throw new Error('Não foi possível obter as negociações da semana anterior.')\r\n      });\r\n  }\r\n\r\n  _obterNegociacoesDaSemanaRetrasada() {\r\n    return this._http\r\n      .get('negociacoes/retrasada')\r\n      .then(negociacoes => \r\n        negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n      )\r\n      .catch(err => {\r\n        console.log(err);\r\n        throw new Error('Não foi possível obter as negociações da semana retrasada.')\r\n      });\r\n  }\r\n\r\n  cadastrar(negociacao) {\r\n    return ConnectionFactory.getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.adicionar(negociacao))\r\n        .catch(err => {throw new Error(err)});\r\n  }\r\n\r\n  apagar() {\r\n    return ConnectionFactory.getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.apagarTodos())\r\n        .catch(err => {throw new Error(err)});\r\n  }\r\n\r\n  listarTodos() {\r\n    return ConnectionFactory.getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.listarTodos())\r\n        .then(negociacoes => {\r\n          console.log(negociacoes);\r\n          return negociacoes;\r\n        })\r\n        .catch(err => {throw new Error(err)});    \r\n  }\r\n\r\n  importar(listaAtual) {\r\n    return this._obterNegociacoes()\r\n      //filtra só os que ainda não foram inseridos\r\n      .then(negociacoes => negociacoes.filter(negociacao => \r\n          !listaAtual.some(neg => negociacao.isEquals(neg))\r\n      ))\r\n      .then(negociacoes => {\r\n        ConnectionFactory.getConnection()\r\n          .then(connection => new NegociacaoDao(connection))\r\n          .then(dao => {\r\n            negociacoes.forEach(async neg => await dao.adicionar(neg));\r\n            return negociacoes;\r\n          });\r\n          return negociacoes;\r\n      })\r\n      .catch(err => {throw new Error(err)});\r\n  }\r\n\r\n}"]}